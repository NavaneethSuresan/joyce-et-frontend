{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Joycd_Sd_Updated/frontend/src/containers/Places.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Footer from \"../components/common/Footer\";\nimport Header from \"../components/common/Header\";\nimport \"../assets/places.css\";\nimport maps from \"../assets/img/maps.png\";\nimport backgroundImage from \"../assets/img/Background image.png\";\nimport arrow from \"../assets/img/arrow image.png\";\nimport subImage1 from \"../assets/img/sub image 1.png\";\nimport subImage2 from \"../assets/img/sub image 2.png\";\nimport subImage3 from \"../assets/img/sub image 3.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFromLocalStorage } from \"../reducks/favorites/operations\";\nimport queryString from \"query-string\";\nimport { getPlaces } from \"../reducks/places/selectors\";\nimport { fetchPlaces } from \"../reducks/places/operations\";\nimport { Card } from \"../components/common/Card\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Places = props => {\n  _s();\n\n  const parsed = queryString.parse(window.location.search);\n  const [search, setSearch] = useState(null);\n  const [category, setCategory] = useState(null);\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const places = getPlaces(selector);\n  const [id, setId] = useState();\n  let temp1 = document.URL;\n  temp1 = temp1[temp1.length - 1];\n  console.log(\"cvb\", temp1);\n  set;\n  useEffect(() => {\n    let temp1 = parsed.search;\n    console.log(\"cvb\", temp1);\n  }, []);\n  useEffect(() => {\n    dispatch(fetchPlaces(places));\n    dispatch(fetchFromLocalStorage());\n\n    if (parsed.search !== undefined) {\n      setSearch(parsed.search);\n    }\n\n    if (parsed.category !== undefined) {\n      setCategory(parsed.category);\n    }\n  }, []);\n  useEffect(() => {\n    // if (search != null || category != null) {\n    //   let id = 2;\n    //   dispatch(fetchPlaces(search, category, id));\n    // }\n    let id = 2;\n    dispatch(fetchPlaces(search, category, id));\n  }, [search, category]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"Homepage\",\n      children: places.map(place => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          place: place\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Places, \"+klBuJc16fAtwqoio6/sQNGK9iU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Places;\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"names":["React","useEffect","useState","Footer","Header","maps","backgroundImage","arrow","subImage1","subImage2","subImage3","useDispatch","useSelector","fetchFromLocalStorage","queryString","getPlaces","fetchPlaces","Card","useParams","Places","props","parsed","parse","window","location","search","setSearch","category","setCategory","dispatch","selector","state","places","id","setId","temp1","document","URL","length","console","log","set","undefined","map","place"],"sources":["/Users/apple/Desktop/Joycd_Sd_Updated/frontend/src/containers/Places.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Footer from \"../components/common/Footer\";\nimport Header from \"../components/common/Header\";\nimport \"../assets/places.css\";\nimport maps from \"../assets/img/maps.png\";\nimport backgroundImage from \"../assets/img/Background image.png\";\nimport arrow from \"../assets/img/arrow image.png\";\nimport subImage1 from \"../assets/img/sub image 1.png\";\nimport subImage2 from \"../assets/img/sub image 2.png\";\nimport subImage3 from \"../assets/img/sub image 3.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFromLocalStorage } from \"../reducks/favorites/operations\";\nimport queryString from \"query-string\";\nimport { getPlaces } from \"../reducks/places/selectors\";\nimport { fetchPlaces } from \"../reducks/places/operations\";\nimport { Card } from \"../components/common/Card\";\nimport { useParams } from \"react-router\";\n\nconst Places = (props) => {\n  const parsed = queryString.parse(window.location.search);\n  const [search, setSearch] = useState(null);\n  const [category, setCategory] = useState(null);\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const places = getPlaces(selector);\n  const [id, setId]= useState()\n\n  let temp1 = document.URL;\n  temp1 = temp1[temp1.length - 1];\n  console.log(\"cvb\", temp1);\n  set\n  useEffect(() => {\n    let temp1 = parsed.search;\n    console.log(\"cvb\", temp1);\n  }, []);\n  useEffect(() => {\n    dispatch(fetchPlaces(places));\n    dispatch(fetchFromLocalStorage());\n\n    if (parsed.search !== undefined) {\n      setSearch(parsed.search);\n    }\n    if (parsed.category !== undefined) {\n      setCategory(parsed.category);\n    }\n  }, []);\n  useEffect(() => {\n    // if (search != null || category != null) {\n    //   let id = 2;\n    //   dispatch(fetchPlaces(search, category, id));\n    // }\n    let id = 2;\n    dispatch(fetchPlaces(search, category, id));\n  }, [search, category]);\n\n  return (\n    <>\n      <Header />\n      <section class=\"Homepage\">\n        {places.map((place) => {\n          return <Card place={place} />;\n        })}\n      </section>\n      <Footer />\n    </>\n  );\n};\nexport default Places;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}